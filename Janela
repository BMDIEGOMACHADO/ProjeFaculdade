import customtkinter
from tkinter import ttk
import pandas as pd


class App(customtkinter.CTk):
    def __init__(self):
        super().__init__()

        self.title("Missão certificaçao Estácio 2022.4")
        self.geometry("1200x500")

        # set grid layout 1x2
        self.grid_rowconfigure(0, weight=1)
        self.grid_columnconfigure(1, weight=1)


        # create navigation frame
        self.navigation_frame = customtkinter.CTkFrame(self, corner_radius=0)
        self.navigation_frame.grid(row=0, column=0, sticky="nsew")
        self.navigation_frame.grid_rowconfigure(6, weight=1)

        self.navigation_frame_label = customtkinter.CTkLabel(self.navigation_frame, text="Menu Principal", font=customtkinter.CTkFont(size=15, weight="bold"))
        self.navigation_frame_label.grid(row=0, column=0, padx=20, pady=20)

        self.cadfunc_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40, border_spacing=10, text="Cadastro de Funcionários",
                                                   fg_color="transparent", text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                   anchor="w", command=self.frame_1_button_event)
        self.cadfunc_button.grid(row=1, column=0, sticky="ew")

        self.cadtools_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40, border_spacing=10, text="Cadastro de Ferramentas",
                                                      fg_color="transparent", text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                      anchor="w", command=self.frame_2_button_event)
        self.cadtools_button.grid(row=2, column=0, sticky="ew")

        self.listfunc_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40, border_spacing=10, text="Lista de Funcionários",
                                                      fg_color="transparent", text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                      anchor="w", command=self.frame_3_button_event)
        self.listfunc_button.grid(row=3, column=0, sticky="ew")

        self.listtools_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40,
                                                      border_spacing=10, text="Lista de Ferramentas",
                                                      fg_color="transparent", text_color=("gray10", "gray90"),
                                                      hover_color=("gray70", "gray30"),
                                                      anchor="w", command=self.frame_4_button_event)
        self.listtools_button.grid(row=4, column=0, sticky="ew")

        self.reservtools_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40,
                                                        border_spacing=10, text="Reserva de Ferramentas",
                                                        fg_color="transparent", text_color=("gray10", "gray90"),
                                                        hover_color=("gray70", "gray30"),
                                                        anchor="w", command=self.frame_5_button_event)
        self.reservtools_button.grid(row=5, column=0, sticky="ew")

        self.appearance_mode_menu = customtkinter.CTkOptionMenu(self.navigation_frame, values=["Light", "Dark", "System"],
                                                                command=self.change_appearance_mode_event)
        self.appearance_mode_menu.grid(row=6, column=0, padx=20, pady=20, sticky="s")



        # criar frame de abertura
        self.inicio_frame = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")
        self.inicio_frame.grid_columnconfigure(0, weight=1)
        self.logo_label = customtkinter.CTkLabel(self.inicio_frame, text="Missão certificação \nPrograma para reserva de ferramentas",
                                                 font=customtkinter.CTkFont(size=15, weight="bold"))
        self.logo_label.grid(pady=200, sticky="nsew")



        # criar frame Cadastro de funcionarios
        self.cad_func = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")
        self.cad_func.grid_columnconfigure(4, weight=1)
        self.cad_func.grid_rowconfigure(9, weight=1)

        self.cad_func_Titulo = customtkinter.CTkLabel(self.cad_func, text="Cadastro de Funcionários", font=customtkinter.CTkFont(size=15, weight="bold"))
        self.cad_func_Titulo.grid(row=0, columnspan=5, stick="nsew")
        self.cpf_func_label = customtkinter.CTkLabel(self.cad_func, text="CPF: ")
        self.cpf_func_label.grid(row=1, column=0, padx=10, pady=10, stick="w")
        self.cpf_func_var = customtkinter.CTkEntry(self.cad_func, placeholder_text="Insira CPF com 11 digítos*", width=240)
        self.cpf_func_var.grid(row=1, column=1, pady=10)
        self.nome_func_label = customtkinter.CTkLabel(self.cad_func, text="Nome: ")
        self.nome_func_label.grid(row=2, column=0, padx=10, pady=10, stick="w")
        self.nome_func_var = customtkinter.CTkEntry(self.cad_func, placeholder_text="Insira o nome*", width=240)
        self.nome_func_var.grid(row=2, column=1, pady=10)
        self.tel_func_label = customtkinter.CTkLabel(self.cad_func, text="Tel: ")
        self.tel_func_label.grid(row=3, column=0, padx=10, pady=10, stick="w")
        self.tel_func_var = customtkinter.CTkEntry(self.cad_func, placeholder_text="Insira o telefone*", width=240)
        self.tel_func_var.grid(row=3, column=1, pady=10)
        self.turn_func_label = customtkinter.CTkLabel(self.cad_func, text="Turno: ")
        self.turn_func_label.grid(row=4, column=0, padx=10, pady=10, stick="w")
        self.turn_func_var = customtkinter.CTkOptionMenu(self.cad_func, dynamic_resizing=False,
                                                        values=["Manhã", "Tarde", "Noite"], width=240)
        self.turn_func_var.grid(row=4, column=1, padx=10, pady=10)
        self.equip_func_label = customtkinter.CTkLabel(self.cad_func, text="Equipe: ")
        self.equip_func_label.grid(row=5, column=0, padx=10, pady=10, stick="w")
        self.equip_func_var = customtkinter.CTkEntry(self.cad_func, placeholder_text="Insira o nome da equipe*", width=240)
        self.equip_func_var.grid(row=5, column=1, pady=10)

        self.cadastrar_func = customtkinter.CTkButton(self.cad_func, corner_radius=10, height=30, text="Cadastrar",
                                                   text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                   anchor="center", command=self.frame_1_button_event)
        self.cadastrar_func.grid(row=6, column=1, sticky="n", pady=10)

        self.alterar_func = customtkinter.CTkButton(self.cad_func, corner_radius=10, height=30, text="Alterar",
                                                      text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                      anchor="center", command=self.frame_1_button_event)
        self.alterar_func.grid(row=7, column=1, sticky="n", pady=10)

        self.excluir_func = customtkinter.CTkButton(self.cad_func, corner_radius=10, height=30, text="Excluir",
                                                      text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                      anchor="center", command=self.frame_1_button_event)
        self.excluir_func.grid(row=8, column=1, sticky="n", pady=10)

        self.limpar_func = customtkinter.CTkButton(self.cad_func, corner_radius=10, height=30, text="Limpar",
                                                      text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                      anchor="center", command=self.frame_1_button_event)
        self.limpar_func.grid(row=9, column=1, sticky="n", pady=10)


        # ----- Componente TreeView --------------------------------------------
        self.dadosColunas = ("CPF", "Nome", "Telefone", "Turno", "Equipe")

        self.treeProdutos = ttk.Treeview(self.cad_func,
                                         columns=self.dadosColunas,
                                         show='headings')

        self.verscrlbar = ttk.Scrollbar(self.cad_func,
                                        orient="vertical",
                                        command=self.treeProdutos.yview)


        self.treeProdutos.configure(yscrollcommand=self.verscrlbar.set)

        self.treeProdutos.heading("CPF", text="CPF")
        self.treeProdutos.heading("Nome", text="Nome")
        self.treeProdutos.heading("Telefone", text="Telefone")
        self.treeProdutos.heading("Turno", text="Turno")
        self.treeProdutos.heading("Equipe", text="Equipe")

        self.treeProdutos.column("CPF", minwidth=0, width=100)
        self.treeProdutos.column("Nome", minwidth=0, width=100)
        self.treeProdutos.column("Telefone", minwidth=0, width=100)
        self.treeProdutos.column("Turno", minwidth=0, width=100)
        self.treeProdutos.column("Equipe", minwidth=0, width=100)

        self.treeProdutos.grid(row=1, column=2, padx=15, pady=15, rowspan=9, columnspan=3, sticky="nsew")








        # criar frame Cadastro de ferramentas
        self.cad_tools = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")




















        # criar frame Lista de funcionarios
        self.list_func = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")




        # criar frame Lista de ferramentas
        self.list_tools = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")




        # criar frame Reserva de ferramentas
        self.reserv_tools = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")

        # select default frame
        self.select_frame_by_name("inicio")

    def select_frame_by_name(self, name):
        # set button color for selected button
        self.cadfunc_button.configure(fg_color=("gray75", "gray25") if name == "frame_1" else "transparent")
        self.cadtools_button.configure(fg_color=("gray75", "gray25") if name == "frame_2" else "transparent")
        self.listfunc_button.configure(fg_color=("gray75", "gray25") if name == "frame_3" else "transparent")
        self.listtools_button.configure(fg_color=("gray75", "gray25") if name == "frame_4" else "transparent")
        self.reservtools_button.configure(fg_color=("gray75", "gray25") if name == "frame_5" else "transparent")

        # show selected frame
        if name == "inicio":
            self.inicio_frame.grid(row=0, column=1, sticky="nsew")
        else:
            self.inicio_frame.grid_forget()
        if name == "frame_1":
            self.cad_func.grid(row=0, column=1, sticky="nsew")
        else:
            self.cad_func.grid_forget()
        if name == "frame_2":
            self.cad_tools.grid(row=0, column=1, sticky="nsew")
        else:
            self.cad_tools.grid_forget()
        if name == "frame_3":
            self.list_func.grid(row=0, column=1, sticky="nsew")
        else:
            self.list_func.grid_forget()

        if name == "frame_4":
            self.list_tools.grid(row=0, column=1, sticky="nsew")
        else:
            self.list_tools.grid_forget()

        if name == "frame_5":
            self.reserv_tools.grid(row=0, column=1, sticky="nsew")
        else:
            self.reserv_tools.grid_forget()

    def frame_1_button_event(self):
        self.select_frame_by_name("frame_1")

    def frame_2_button_event(self):
        self.select_frame_by_name("frame_2")

    def frame_3_button_event(self):
        self.select_frame_by_name("frame_3")

    def frame_4_button_event(self):
        self.select_frame_by_name("frame_4")

    def frame_5_button_event(self):
        self.select_frame_by_name("frame_5")

    def change_appearance_mode_event(self, new_appearance_mode):
        customtkinter.set_appearance_mode(new_appearance_mode)






    # Funções para o Frame de Cadastro de Funcionarios
    

    #def cadastra_func(self):


    #def altera_func(self):


    #def exclui_func(self):



    #def limpa_func(self):





if __name__ == "__main__":
    app = App()
    app.mainloop()
